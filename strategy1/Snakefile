# This is the snakemake file that implements the strategy 1 described in README.md
#
# get_footprint_snp: footprint bed, snp_list --> snp_in_footprint (snp_id, motif_name)

rule preprocess_footprint:
    input:
        lambda wildcards: config['footprint_bed'][wildcards.footprint_name]
    output:
        'data/preprocess.{footprint_name}.{snp_name}.bed.gz'
    shell:
        'awk -F"\\t" '{{print $1"\\t"$2"\\t"$3+1"\\t"$4"\\t"$6"\\t"$13}}' | gzip > {output[0]}'

rule get_footprint_snp:
    input:
        footprint_bed = 'data/preprocess.{footprint_name}.{snp_name}.bed.gz',
        snp_list = lambda wildcards: config['snp_list'][wildcards.snp_name]['path']
    output:
        'data/footprint_snp.{footprint_name}.{snp_name}.bed.gz'
    shell:
        'bedtools intersect -a <(tail -n +2 {input.snp_list} | awk -F"\\t" '{{print $1"\\t"$2-1"\\t"$3}}') -b <(zcat < {input.footprint_bed}) -wb | gzip > {output[0]}'

rule get_seq:
    input:
        footprint_snp = 'data/footprint_snp.{footprint_name}.{snp_name}.bed.gz' # ATTENTION! in input footprinting region file, both start and end are included (0-based)!
    params:
        genome_fasta = config['genome'],
        ncol_of_snp_list = lambda wildcards: config['snp_list'][wildcards.snp_name]['ncol_of_snp_list']
    output:
        'data/seq.{footprint_name}.{snp_name}.tab'
    shell:
        '''bedtools getfasta -fi {params.genome_fasta} -bed <(zcat {input.footprint_snp} | awk -F"\\t" '{{print $(1+{params.ncol_of_snp_list})"\\t"$(2+{params.ncol_of_snp_list})"\\t"$(3+{params.ncol_of_snp_list})}}') -tab -fo {output[0]}'''
rule get_motif_scores:
    input:
        footprint_snp = 'data/footprint_snp.{footprint_name}.{snp_name}.bed.gz',
        footprint_seq = 'data/seq.{footprint_name}.{snp_name}.tab'
    params:
        motif_folder = config['motif_folder'],
        ncol_of_snp_list = lambda wildcards: config['snp_list'][wildcards.snp_name]['ncol_of_snp_list']
    output:
        'data/output.{footprint_name}.{snp_name}.bed'
    shell:
        'python scripts/get_motif_scores.py --motif_folder {params.motif_folder} \
        --footprint_snp {input.footprint_snp} \
        --footprint_seq {input.footprint_seq} \
        --ncol {params.ncol_of_snp_list} \
        --out {output[0]}'
