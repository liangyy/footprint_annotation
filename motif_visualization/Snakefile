# This module visualize recalibrated motifs obtained from
# [this paper](http://journals.plos.org/plosgenetics/article?id=10.1371/journal.pgen.1005875)
# It does the following things:
# 1. Visualize the motif pwm in standard way
# 2. Plot the prior-score relationship reported for each motif
# 3. Calculate the information entropy of each position in the motif

rule read_motif:
    params:
        lambda wildcards: config[wildcards.motif_folder],
        'data/entropy.{motif_folder}.rds'
    output:
        rmd = temp('report/visualize.{motif_folder}.Rmd')
    run:
        rmd = '''---
title: "Motif Visualization"
output:
    html_document:
        number_sections: true
        toc: true
        toc_depth: 3
        toc_float: true
date: "`r format(Sys.time(), '%d %B, %Y')`"
---

```{{r setup}}
knitr::opts_knit$set(root.dir = '{envir}')
```

# Load Motifs

```{{r, echo=FALSE}}
source('../scripts/footprint_lib.R')
motif_dir <- '{motif_folder}'
greped_files <- dir(motif_dir)
motifs.ind <- grepl('pwm', greped_files)
motif_files <- greped_files[motifs.ind]
motif_ids <- gsub('.pwm', '', motif_files)
priors <- list()
pwms <- list()
entropys <- list()
for(i in motif_ids){{
    filename <- paste0(motif_dir, '/', i, '.pwm')
    re <- readMotif(filename)
    priors[[i]] <- re$prior
    pwms[[i]] <- re$pwm
    entropys[[i]] <- 2 - apply(re$pwm, 1, entropyDiscrete)
}}
```

# PWM and Prior-LLR Plot

```{{r, echo=FALSE}}
library(seqLogo)
library(bsselectR)
library(ggplot2)
plots <- list()
envir <- '{envir}'
for(i in names(pwms)){{
    plot1 <- paste0('plot/seqLogo.', i, '.png')
    plot2 <- paste0('plot/priorLLR.', i, '.png')
    final <- paste0('plot/Merge.', i, '.png')
    plot_pwm(plot1, t(pwms[[i]]))
    plot_prior(plot2, priors[[i]])
    # print(system('pwd'))
    system(paste0('convert \\\\( ', plot1, ' ', plot2, ' +append \\\\) -background none -append ', final))
    plots[[i]] <- paste0(envir, final)
}}
bsselect(plots, type = "img", selected = names(plots)[1],
         live_search = TRUE, show_tick = TRUE, height = 3, width = 5,
         frame_height = 400, frame_width = 1000)
```

# Save Entropy Per Position

```{{r}}
saveRDS(entropys, file = '{outname}')
```
'''.format(envir='../', motif_folder=params[0], outname=params[1])
        o = open(output[0], 'w')
        o.write(rmd)
        o.close()

rule gen_html:
    input:
        'report/visualize.{motif_folder}.Rmd'
    output:
        'report/visualize.{motif_folder}.html',
        'data/entropy.{motif_folder}.rds'
    shell:
        '''Rscript -e "rmarkdown::render('./{input[0]}')"'''
